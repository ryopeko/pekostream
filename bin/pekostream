#!/usr/bin/env ruby

require 'bundler/setup'
require 'pekostream'
require 'twitter'
require 'dotenv'
require 'im-kayac'
require 'pp'
require 'logger'

logger = Logger.new(STDOUT)
logger.level = Logger::DEBUG

logger.info('Initialize Start')
Dotenv.load Pathname('../../').expand_path(__FILE__).join('.env').to_s

logger.info('SetUp: notifier')
notifier = Pekostream::Notification::ImKayac.new(username: 'ryopeko', secret: ENV['IMKAYAC_SECRET'])
logger.info('OK: notifier')

logger.info('SetUp: Twitter Stream')
client = Twitter::Streaming::Client.new do |config|
  config.consumer_key        = ENV['CONSUMER_KEY']
  config.consumer_secret     = ENV['CONSUMER_SECRET']
  config.access_token        = ENV['ACCESS_TOKEN']
  config.access_token_secret = ENV['ACCESS_SECRET']
end
logger.info('OK: Twitter Stream')

logger.info('Twitter Stream Start')

client.user do |object|
  case object
  when Twitter::Tweet
    pp "#{object.user.screen_name}: #{object.text}"

    #notification filter => notification
  when Twitter::Streaming::Event
    pp object.name
    pp object
    case object.name
    when :favorite
      pp "#{object.name} from #{object.source.screen_name}: #{object.target_object.text}"
    when :follow
      pp "#{object.name} from #{object.source.screen_name}"
    end
    #notificationpp
  else
    pp object.class
  end
end


